name: Deploy API

on:
  push:
    branches:
      - main # Deploy to production on main branch push
      - staging # Deploy to staging on staging branch push
  workflow_dispatch: # Allow manual trigger

jobs:
  deploy:
    name: Deploy to ${{ github.ref == 'refs/heads/main' && 'Production' || 'Staging' }}
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set environment variables
        id: env
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            echo "DEPLOY_ENV=prod" >> $GITHUB_ENV
            echo "DEPLOY_PATH=/var/www/habits-api/production" >> $GITHUB_ENV
          else
            echo "DEPLOY_ENV=staging" >> $GITHUB_ENV
            echo "DEPLOY_PATH=/var/www/habits-api/staging" >> $GITHUB_ENV
          fi

      - name: Print environment info
        run: |
          echo "Deploying to ${{ env.DEPLOY_ENV }} environment"
          echo "Deploy path: ${{ env.DEPLOY_PATH }}"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: TypeCheck
        run: npm run typecheck

      - name: Deploy application
        run: |
          # Create deploy directory if it doesn't exist
          mkdir -p ${{ env.DEPLOY_PATH }}

          # Copy files to deployment directory
          rsync -av --exclude='.git' --exclude='node_modules' . ${{ env.DEPLOY_PATH }}/

          # Install production dependencies
          cd ${{ env.DEPLOY_PATH }}
          npm ci --production

          # Build the application
          npm run build

          # Start or restart the application with Docker
          ./scripts/deploy.sh ${{ env.DEPLOY_ENV }} down || true
          ./scripts/deploy.sh ${{ env.DEPLOY_ENV }} build
          ./scripts/deploy.sh ${{ env.DEPLOY_ENV }} up

      - name: Verify deployment
        run: |
          # Wait for the service to start
          sleep 10

          # Check if the service is running
          if [[ "${{ env.DEPLOY_ENV }}" == "prod" ]]; then
            curl -f http://localhost:5050/api/health || exit 1
          else
            curl -f http://localhost:5051/api/health || exit 1
          fi

      - name: Notify on success
        if: success()
        run: |
          echo "Deployment to ${{ env.DEPLOY_ENV }} completed successfully!"
